tags: $:/tags/ViewTemplate
title: $:/plugins/oflg/fishing/fishing

<$reveal default={{$:/temp/fishing!!fish}} type="match" text=<<currentTiddler>> animate="yes">
<$reveal state=<<folded-state>> type="match" text="show" animate="yes">

<!-- set anki algorithm https://github.com/oflg/anki-algorithm -->
<!-- set anki parameters https://docs.ankiweb.net/deck-options.html#advanced -->
<$vars
maximuminterval={{$:/plugins/oflg/fishing/config!!maximuminterval}}
startingease={{$:/plugins/oflg/fishing/config!!startingease}}
easybonus={{$:/plugins/oflg/fishing/config!!easybonus}}
intervalmodifier={{$:/plugins/oflg/fishing/config!!intervalmodifier}}
hardinterval={{$:/plugins/oflg/fishing/config!!hardinterval}}
newinterval={{$:/plugins/oflg/fishing/config!!newinterval}}
>
<!-- get lastfactor and lastinterval -->
<$vars
lastfactor={{{ [<currentTiddler>get[factor]else<startingease>] }}}
lastinterval={{{ [<currentTiddler>get[interval]else<newinterval>] }}}
>
<!-- calculate interval -->
<!-- delay is in delay.js -->
<$vars
againivl={{{ [<newinterval>multiply<lastinterval>min<maximuminterval>] }}}
>
<$vars
hardivl={{{ [<lastinterval>add[1]] =[<delay>divide[4]floor[]add<lastinterval>multiply<intervalmodifier>multiply<hardinterval>] +[maxall[]min<maximuminterval>] }}}
>
<$vars
goodivl={{{ [<hardivl>add[1]] =[<delay>divide[2]floor[]add<lastinterval>multiply<lastfactor>multiply<intervalmodifier>] +[maxall[]min<maximuminterval>] }}} 
>
<$vars
easyivl={{{ [<goodivl>add[1]] =[<delay>add<lastinterval>multiply<lastfactor>multiply<intervalmodifier>multiply<easybonus>] +[maxall[]min<maximuminterval>] }}} 
>

<!-- set factor, interval, due to current tiddler, then navigate to next tiddler -->
<$set name="extrafilter" value={{$:/temp/fishing!!extrafilter}} emptyValue="[tag[Fish]]">
<$vars
today=<<now "YYYY0MM0DD">>
selectedfishpond={{$:/temp/fishing!!fishpond}}
>
<$list filter="[[$:/plugins/oflg/fishing/fishpond]indexes[]sortby[overdue due undue revised unrevised all]]" variable="fishpond">
<$vars
fishfilter={{{ [[$:/plugins/oflg/fishing/fishpond]getindex<fishpond>] }}}
>
<$reveal default=<<fishpond>> type="match" text=<<selectedfishpond>> animate="yes">
<$vars
fishcount={{{ [tag[Fish]subfilter<extrafilter>subfilter<fishfilter>count[]] }}}
nextfish={{{ [tag[Fish]subfilter<extrafilter>subfilter<fishfilter>rest[]first[]] }}}
nextfishfold={{{ [tag[Fish]subfilter<extrafilter>subfilter<fishfilter>rest[]first[]addprefix[$:/state/folded/]] }}}
>
<div style="display:flex;justify-content:space-between;">
<div style="color:grey;">
<<selectedfishpond>> : <<extrafilter>> : <<fishcount>>
</div>
<div>
<$list filter="=again =hard =good =easy" variable="ease">
<$vars
factor={{{ [<ease>match[again]then<lastfactor>subtract[0.2]max[1.3]] ~[<ease>match[hard]then<lastfactor>subtract[0.15]max[1.3]] ~[<ease>match[good]then<lastfactor>max[1.3]] ~[<ease>match[easy]then<lastfactor>add[0.15]max[1.3]] +[fixed[2]] }}}
interval={{{ [<ease>match[again]then<againivl>] ~[<ease>match[hard]then<hardivl>] ~[<ease>match[good]then<goodivl>] ~[<ease>match[easy]then<easyivl>] +[fixed[2]] }}}
style={{{ [<ease>match[again]then[margin-left:10px;color:red;]] ~[<ease>match[hard]then[margin-left:10px;color:black;]] ~[<ease>match[good]then[margin-left:10px;color:green;]] ~[<ease>match[easy]then[margin-left:10px;color:blue;]] }}}
>
<$fieldmangler>
<$button tooltip=<<ease>> class="tc-btn-invisible tc-tiddlylink" style=<<style>> message="tm-add-tag" param="Fish">
<$action-setfield factor=<<factor>> interval=<<interval>>/>
<!-- due must be saved after interval in due.js -->
<$action-setfield $field="due" $value=<<due>>/>
<$action-setfield $tiddler="$:/temp/fishing" text="" fish=<<nextfish>> fishfold=<<nextfishfold>>/>
<$action-setfield $tiddler=<<nextfishfold>> text="hide"/>
<$action-navigate $to=<<nextfish>>/>
<$action-sendmessage $message="tm-close-tiddler"/>
<<ease>>
</$button>
</$fieldmangler>
</$vars>
</$list>
</div>
</div>

</$vars>
</$reveal>
</$vars>
</$list>
</$vars>
</$set>

</$vars>
</$vars>
</$vars>
</$vars>
</$vars>
</$vars>

</$reveal>
</$reveal>